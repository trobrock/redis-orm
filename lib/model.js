// Generated by CoffeeScript 1.3.1
(function() {
  var Model, msgpack;

  msgpack = require('./msgpack');

  Model = (function() {

    Model.name = 'Model';

    function Model() {}

    Model.prototype.pack = function() {
      var attr, packableObject, _i, _len, _ref;
      packableObject = {};
      _ref = this._attributes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        attr = _ref[_i];
        packableObject[attr] = this[attr];
      }
      return msgpack.pack(packableObject, true);
    };

    return Model;

  })();

  Model.db = null;

  Model.key = "";

  Model.find = function(name) {
    var item;
    return ((function() {
      var _i, _len, _ref, _results;
      _ref = this.collection();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.name === name) {
          _results.push(item);
        }
      }
      return _results;
    }).call(this))[0];
  };

  Model.collection = function() {
    var _ref;
    return (_ref = this._collection) != null ? _ref : this._collection = [];
  };

  Model.sync = function(callback) {
    var _this = this;
    return this.db.smembers(this.key, function(err, items) {
      var item, _i, _len;
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        _this.collection().push(new _this(msgpack.unpack(item)));
      }
      if (callback != null) {
        return callback();
      }
    });
  };

  Model.create = function(options) {
    var obj;
    obj = new this(options);
    this.collection().push(obj);
    this.db.sadd(this.key, obj.pack());
    return obj;
  };

  module.exports = Model;

}).call(this);
